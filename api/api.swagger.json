{
  "swagger": "2.0",
  "info": {
    "title": "Onepanel Core",
    "description": "Onepanel Core project API",
    "version": "1.0.0-beta1",
    "contact": {
      "name": "Onepanel Core project",
      "url": "https://github.com/onepanelio/core"
    }
  },
  "host": "localhost:8888",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/apis/v1beta1/auth/token": {
      "post": {
        "operationId": "IsValidToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/IsValidTokenResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenWrapper"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/apis/v1beta1/namespaces": {
      "get": {
        "operationId": "ListNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListNamespacesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "NamespaceService"
        ]
      },
      "post": {
        "operationId": "CreateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Namespace"
            }
          }
        ],
        "tags": [
          "NamespaceService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/cron_workflow": {
      "post": {
        "operationId": "CreateCronWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CronWorkflow"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CronWorkflow"
            }
          }
        ],
        "tags": [
          "CronWorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/cron_workflow/{name}": {
      "get": {
        "operationId": "GetCronWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CronWorkflow"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CronWorkflowService"
        ]
      },
      "put": {
        "operationId": "UpdateCronWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CronWorkflow"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CronWorkflow"
            }
          }
        ],
        "tags": [
          "CronWorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/cron_workflows": {
      "get": {
        "operationId": "ListCronWorkflows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListCronWorkflowsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflow_template_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CronWorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/cron_workflows/{name}/terminate": {
      "delete": {
        "operationId": "TerminateCronWorkflow",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "CronWorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/cron_workflows/{workflow_template_name}": {
      "get": {
        "operationId": "ListCronWorkflows2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListCronWorkflowsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflow_template_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "CronWorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/secrets": {
      "get": {
        "operationId": "ListSecrets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListSecretsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecretService"
        ]
      },
      "post": {
        "operationId": "CreateSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          }
        ],
        "tags": [
          "SecretService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/secrets/{name}": {
      "get": {
        "operationId": "GetSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecretService"
        ]
      },
      "delete": {
        "operationId": "DeleteSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteSecretResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecretService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/secrets/{name}/exists": {
      "get": {
        "operationId": "SecretExists",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SecretExistsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecretService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/secrets/{secret.name}": {
      "post": {
        "operationId": "AddSecretKeyValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AddSecretKeyValueResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "secret.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          }
        ],
        "tags": [
          "SecretService"
        ]
      },
      "patch": {
        "operationId": "UpdateSecretKeyValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/UpdateSecretKeyValueResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "secret.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          }
        ],
        "tags": [
          "SecretService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/secrets/{secretName}/keys/{key}": {
      "delete": {
        "operationId": "DeleteSecretKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteSecretKeyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "secretName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SecretService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_executions": {
      "get": {
        "operationId": "ListWorkflowExecutions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListWorkflowExecutionsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowTemplateUid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowTemplateVersion",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      },
      "post": {
        "summary": "Creates a Workflow",
        "operationId": "CreateWorkflowExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowExecution"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowExecution"
            }
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_executions/{name}": {
      "get": {
        "operationId": "GetWorkflowExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowExecution"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      },
      "post": {
        "summary": "Clone a Workflow. This is the same as running it again.",
        "operationId": "CloneWorkflowExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowExecution"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_executions/{name}/artifacts/{key}": {
      "get": {
        "operationId": "GetArtifact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ArtifactResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_executions/{name}/cron_start_statistics": {
      "post": {
        "operationId": "CronStartWorkflowExecutionStatistic",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Statistics"
            }
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_executions/{name}/files/{path}": {
      "get": {
        "operationId": "ListFiles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListFilesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_executions/{name}/pods/{podName}/containers/{containerName}/logs": {
      "get": {
        "operationId": "GetWorkflowExecutionLogs",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/LogEntry"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "podName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_executions/{name}/pods/{podName}/metrics": {
      "get": {
        "operationId": "GetWorkflowExecutionMetrics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetWorkflowExecutionMetricsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "podName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_executions/{name}/resubmit": {
      "put": {
        "operationId": "ResubmitWorkflowExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowExecution"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_executions/{name}/statistics": {
      "post": {
        "operationId": "AddWorkflowExecutionStatistics",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Statistics"
            }
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_executions/{name}/terminate": {
      "put": {
        "operationId": "TerminateWorkflowExecution",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_executions/{name}/watch": {
      "get": {
        "operationId": "WatchWorkflowExecution",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "$ref": "#/x-stream-definitions/WorkflowExecution"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_templates": {
      "get": {
        "operationId": "ListWorkflowTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListWorkflowTemplatesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "WorkflowTemplateService"
        ]
      },
      "post": {
        "operationId": "CreateWorkflowTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowTemplate"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowTemplate"
            }
          }
        ],
        "tags": [
          "WorkflowTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_templates/{uid}": {
      "get": {
        "operationId": "GetWorkflowTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowTemplate"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WorkflowTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_templates/{uid}/archive": {
      "put": {
        "operationId": "ArchiveWorkflowTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ArchiveWorkflowTemplateResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_templates/{uid}/clone/{name}": {
      "get": {
        "operationId": "CloneWorkflowTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowTemplate"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WorkflowTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_templates/{uid}/clone/{name}/{version}": {
      "get": {
        "operationId": "CloneWorkflowTemplate2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowTemplate"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WorkflowTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_templates/{uid}/versions": {
      "get": {
        "operationId": "ListWorkflowTemplateVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListWorkflowTemplateVersionsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkflowTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_templates/{uid}/versions/{version}": {
      "get": {
        "operationId": "GetWorkflowTemplate2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowTemplate"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WorkflowTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_templates/{workflowTemplate.uid}/versions": {
      "post": {
        "operationId": "CreateWorkflowTemplateVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowTemplate"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowTemplate.uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowTemplate"
            }
          }
        ],
        "tags": [
          "WorkflowTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workflow_templates/{workflowTemplate.uid}/versions/{workflowTemplate.version}": {
      "put": {
        "operationId": "UpdateWorkflowTemplateVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowTemplate"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowTemplate.uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workflowTemplate.version",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowTemplate"
            }
          }
        ],
        "tags": [
          "WorkflowTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workspace_templates": {
      "get": {
        "operationId": "ListWorkspaceTemplates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListWorkspaceTemplatesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "WorkspaceTemplateService"
        ]
      },
      "post": {
        "summary": "Creates a WorkspaceTemplate",
        "operationId": "CreateWorkspaceTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkspaceTemplate"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceTemplate"
            }
          }
        ],
        "tags": [
          "WorkspaceTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workspace_templates/{name}": {
      "put": {
        "summary": "Updates a WorkspaceTemplate",
        "operationId": "UpdateWorkspaceTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkspaceTemplate"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceTemplate"
            }
          }
        ],
        "tags": [
          "WorkspaceTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workspace_templates/{uid}": {
      "get": {
        "summary": "Get a WorkspaceTemplate",
        "operationId": "GetWorkspaceTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkspaceTemplate"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WorkspaceTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workspace_templates/{uid}/versions": {
      "get": {
        "operationId": "ListWorkspaceTemplateVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ListWorkspaceTemplateVersionsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "WorkspaceTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workspace_templates/{uid}/workflow_template": {
      "post": {
        "summary": "Get the generated WorkflowTemplate for a WorkspaceTemplate",
        "operationId": "GenerateWorkspaceTemplateWorkflowTemplate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/WorkflowTemplate"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceTemplate"
            }
          }
        ],
        "tags": [
          "WorkspaceTemplateService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/workspaces": {
      "post": {
        "operationId": "CreateWorkspace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        ],
        "tags": [
          "WorkspaceService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/{resource}/{uid}/labels": {
      "get": {
        "operationId": "GetLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "LabelService"
        ]
      },
      "post": {
        "operationId": "AddLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Labels"
            }
          }
        ],
        "tags": [
          "LabelService"
        ]
      },
      "put": {
        "operationId": "ReplaceLabels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Labels"
            }
          }
        ],
        "tags": [
          "LabelService"
        ]
      }
    },
    "/apis/v1beta1/{namespace}/{resource}/{uid}/labels/{key}": {
      "delete": {
        "operationId": "DeleteLabel",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetLabelsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "LabelService"
        ]
      }
    }
  },
  "definitions": {
    "AddSecretKeyValueResponse": {
      "type": "object",
      "properties": {
        "inserted": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "ArchiveWorkflowTemplateResponse": {
      "type": "object",
      "properties": {
        "workflowTemplate": {
          "$ref": "#/definitions/WorkflowTemplate"
        }
      }
    },
    "ArtifactResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "CronWorkflow": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "manifest": {
          "type": "string"
        },
        "workflowExecution": {
          "$ref": "#/definitions/WorkflowExecution"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        }
      }
    },
    "CronWorkflowStatisticsReport": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeleteSecretKeyResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "DeleteSecretResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "File": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "contentType": {
          "type": "string"
        },
        "lastModified": {
          "type": "string"
        },
        "directory": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "GetLabelsResponse": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        }
      }
    },
    "GetWorkflowExecutionMetricsResponse": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metric"
          }
        }
      }
    },
    "IsValidTokenResponse": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        }
      }
    },
    "KeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Labels": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        }
      }
    },
    "ListCronWorkflowsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "cronWorkflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CronWorkflow"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListFilesResponse": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/File"
          }
        },
        "parentPath": {
          "type": "string"
        }
      }
    },
    "ListNamespacesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Namespace"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListSecretsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "secrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Secret"
          }
        }
      }
    },
    "ListWorkflowExecutionsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "workflowExecutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowExecution"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListWorkflowTemplateVersionsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "workflowTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowTemplate"
          }
        }
      }
    },
    "ListWorkflowTemplatesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "workflowTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowTemplate"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListWorkspaceTemplateVersionsResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "workspaceTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkspaceTemplate"
          }
        }
      }
    },
    "ListWorkspaceTemplatesResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "workspaceTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkspaceTemplate"
          }
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "pages": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LogEntry": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "Metric": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "format": {
          "type": "string"
        }
      }
    },
    "Namespace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Parameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "hint": {
          "type": "string"
        },
        "required": {
          "type": "boolean",
          "format": "boolean"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterOption"
          }
        }
      }
    },
    "ParameterOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Secret": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SecretExistsResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "Statistics": {
      "type": "object",
      "properties": {
        "workflowStatus": {
          "type": "string"
        },
        "workflowTemplateId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "TokenWrapper": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "UpdateSecretKeyValueResponse": {
      "type": "object",
      "properties": {
        "updated": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "WorkflowExecution": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "startedAt": {
          "type": "string"
        },
        "finishedAt": {
          "type": "string"
        },
        "manifest": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "workflowTemplate": {
          "$ref": "#/definitions/WorkflowTemplate"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        }
      }
    },
    "WorkflowExecutionStatisticReport": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "lastExecuted": {
          "type": "string"
        },
        "running": {
          "type": "integer",
          "format": "int32"
        },
        "completed": {
          "type": "integer",
          "format": "int32"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkflowTemplate": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "format": "int64"
        },
        "versions": {
          "type": "string",
          "format": "int64"
        },
        "manifest": {
          "type": "string"
        },
        "isLatest": {
          "type": "boolean",
          "format": "boolean"
        },
        "isArchived": {
          "type": "boolean",
          "format": "boolean"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "stats": {
          "$ref": "#/definitions/WorkflowExecutionStatisticReport"
        },
        "cronStats": {
          "$ref": "#/definitions/CronWorkflowStatisticsReport"
        }
      }
    },
    "Workspace": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "format": "int64"
        },
        "createdAt": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "workspaceTemplate": {
          "$ref": "#/definitions/WorkspaceTemplate"
        }
      }
    },
    "WorkspaceTemplate": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "format": "int64"
        },
        "manifest": {
          "type": "string"
        },
        "isLatest": {
          "type": "boolean",
          "format": "boolean"
        },
        "createdAt": {
          "type": "string"
        },
        "workflowTemplate": {
          "$ref": "#/definitions/WorkflowTemplate"
        }
      }
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "grpc.gateway.runtime.StreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  },
  "x-stream-definitions": {
    "LogEntry": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/LogEntry"
        },
        "error": {
          "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
        }
      },
      "title": "Stream result of LogEntry"
    },
    "WorkflowExecution": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/WorkflowExecution"
        },
        "error": {
          "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
        }
      },
      "title": "Stream result of WorkflowExecution"
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer",
      "name": "authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
