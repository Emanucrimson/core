// Code generated by protoc-gen-go. DO NOT EDIT.
// source: workflow.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateWorkflowExecutionRequest struct {
	Namespace            string             `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	WorkflowExecution    *WorkflowExecution `protobuf:"bytes,2,opt,name=workflowExecution,proto3" json:"workflowExecution,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateWorkflowExecutionRequest) Reset()         { *m = CreateWorkflowExecutionRequest{} }
func (m *CreateWorkflowExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowExecutionRequest) ProtoMessage()    {}
func (*CreateWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{0}
}

func (m *CreateWorkflowExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowExecutionRequest.Unmarshal(m, b)
}
func (m *CreateWorkflowExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowExecutionRequest.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowExecutionRequest.Merge(m, src)
}
func (m *CreateWorkflowExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowExecutionRequest.Size(m)
}
func (m *CreateWorkflowExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowExecutionRequest proto.InternalMessageInfo

func (m *CreateWorkflowExecutionRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateWorkflowExecutionRequest) GetWorkflowExecution() *WorkflowExecution {
	if m != nil {
		return m.WorkflowExecution
	}
	return nil
}

type GetWorkflowExecutionRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkflowExecutionRequest) Reset()         { *m = GetWorkflowExecutionRequest{} }
func (m *GetWorkflowExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowExecutionRequest) ProtoMessage()    {}
func (*GetWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{1}
}

func (m *GetWorkflowExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowExecutionRequest.Unmarshal(m, b)
}
func (m *GetWorkflowExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowExecutionRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkflowExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowExecutionRequest.Merge(m, src)
}
func (m *GetWorkflowExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowExecutionRequest.Size(m)
}
func (m *GetWorkflowExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowExecutionRequest proto.InternalMessageInfo

func (m *GetWorkflowExecutionRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetWorkflowExecutionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetArtifactRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetArtifactRequest) Reset()         { *m = GetArtifactRequest{} }
func (m *GetArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*GetArtifactRequest) ProtoMessage()    {}
func (*GetArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{2}
}

func (m *GetArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtifactRequest.Unmarshal(m, b)
}
func (m *GetArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtifactRequest.Marshal(b, m, deterministic)
}
func (m *GetArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtifactRequest.Merge(m, src)
}
func (m *GetArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_GetArtifactRequest.Size(m)
}
func (m *GetArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtifactRequest proto.InternalMessageInfo

func (m *GetArtifactRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetArtifactRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetArtifactRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type WatchWorkflowExecutionRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchWorkflowExecutionRequest) Reset()         { *m = WatchWorkflowExecutionRequest{} }
func (m *WatchWorkflowExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*WatchWorkflowExecutionRequest) ProtoMessage()    {}
func (*WatchWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{3}
}

func (m *WatchWorkflowExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchWorkflowExecutionRequest.Unmarshal(m, b)
}
func (m *WatchWorkflowExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchWorkflowExecutionRequest.Marshal(b, m, deterministic)
}
func (m *WatchWorkflowExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchWorkflowExecutionRequest.Merge(m, src)
}
func (m *WatchWorkflowExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_WatchWorkflowExecutionRequest.Size(m)
}
func (m *WatchWorkflowExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchWorkflowExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchWorkflowExecutionRequest proto.InternalMessageInfo

func (m *WatchWorkflowExecutionRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *WatchWorkflowExecutionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ResubmitWorkflowExecutionRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResubmitWorkflowExecutionRequest) Reset()         { *m = ResubmitWorkflowExecutionRequest{} }
func (m *ResubmitWorkflowExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*ResubmitWorkflowExecutionRequest) ProtoMessage()    {}
func (*ResubmitWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{4}
}

func (m *ResubmitWorkflowExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResubmitWorkflowExecutionRequest.Unmarshal(m, b)
}
func (m *ResubmitWorkflowExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResubmitWorkflowExecutionRequest.Marshal(b, m, deterministic)
}
func (m *ResubmitWorkflowExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResubmitWorkflowExecutionRequest.Merge(m, src)
}
func (m *ResubmitWorkflowExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_ResubmitWorkflowExecutionRequest.Size(m)
}
func (m *ResubmitWorkflowExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResubmitWorkflowExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResubmitWorkflowExecutionRequest proto.InternalMessageInfo

func (m *ResubmitWorkflowExecutionRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ResubmitWorkflowExecutionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TerminateWorkflowExecutionRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminateWorkflowExecutionRequest) Reset()         { *m = TerminateWorkflowExecutionRequest{} }
func (m *TerminateWorkflowExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*TerminateWorkflowExecutionRequest) ProtoMessage()    {}
func (*TerminateWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{5}
}

func (m *TerminateWorkflowExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateWorkflowExecutionRequest.Unmarshal(m, b)
}
func (m *TerminateWorkflowExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateWorkflowExecutionRequest.Marshal(b, m, deterministic)
}
func (m *TerminateWorkflowExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateWorkflowExecutionRequest.Merge(m, src)
}
func (m *TerminateWorkflowExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_TerminateWorkflowExecutionRequest.Size(m)
}
func (m *TerminateWorkflowExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateWorkflowExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateWorkflowExecutionRequest proto.InternalMessageInfo

func (m *TerminateWorkflowExecutionRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *TerminateWorkflowExecutionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetWorkflowExecutionLogsRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PodName              string   `protobuf:"bytes,3,opt,name=podName,proto3" json:"podName,omitempty"`
	ContainerName        string   `protobuf:"bytes,4,opt,name=containerName,proto3" json:"containerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkflowExecutionLogsRequest) Reset()         { *m = GetWorkflowExecutionLogsRequest{} }
func (m *GetWorkflowExecutionLogsRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowExecutionLogsRequest) ProtoMessage()    {}
func (*GetWorkflowExecutionLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{6}
}

func (m *GetWorkflowExecutionLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowExecutionLogsRequest.Unmarshal(m, b)
}
func (m *GetWorkflowExecutionLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowExecutionLogsRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkflowExecutionLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowExecutionLogsRequest.Merge(m, src)
}
func (m *GetWorkflowExecutionLogsRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowExecutionLogsRequest.Size(m)
}
func (m *GetWorkflowExecutionLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowExecutionLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowExecutionLogsRequest proto.InternalMessageInfo

func (m *GetWorkflowExecutionLogsRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetWorkflowExecutionLogsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetWorkflowExecutionLogsRequest) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *GetWorkflowExecutionLogsRequest) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

type GetWorkflowExecutionMetricsRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PodName              string   `protobuf:"bytes,3,opt,name=podName,proto3" json:"podName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkflowExecutionMetricsRequest) Reset()         { *m = GetWorkflowExecutionMetricsRequest{} }
func (m *GetWorkflowExecutionMetricsRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowExecutionMetricsRequest) ProtoMessage()    {}
func (*GetWorkflowExecutionMetricsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{7}
}

func (m *GetWorkflowExecutionMetricsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowExecutionMetricsRequest.Unmarshal(m, b)
}
func (m *GetWorkflowExecutionMetricsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowExecutionMetricsRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkflowExecutionMetricsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowExecutionMetricsRequest.Merge(m, src)
}
func (m *GetWorkflowExecutionMetricsRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowExecutionMetricsRequest.Size(m)
}
func (m *GetWorkflowExecutionMetricsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowExecutionMetricsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowExecutionMetricsRequest proto.InternalMessageInfo

func (m *GetWorkflowExecutionMetricsRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetWorkflowExecutionMetricsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetWorkflowExecutionMetricsRequest) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

type GetWorkflowExecutionMetricsResponse struct {
	Metrics              []*Metric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetWorkflowExecutionMetricsResponse) Reset()         { *m = GetWorkflowExecutionMetricsResponse{} }
func (m *GetWorkflowExecutionMetricsResponse) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowExecutionMetricsResponse) ProtoMessage()    {}
func (*GetWorkflowExecutionMetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{8}
}

func (m *GetWorkflowExecutionMetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowExecutionMetricsResponse.Unmarshal(m, b)
}
func (m *GetWorkflowExecutionMetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowExecutionMetricsResponse.Marshal(b, m, deterministic)
}
func (m *GetWorkflowExecutionMetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowExecutionMetricsResponse.Merge(m, src)
}
func (m *GetWorkflowExecutionMetricsResponse) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowExecutionMetricsResponse.Size(m)
}
func (m *GetWorkflowExecutionMetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowExecutionMetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowExecutionMetricsResponse proto.InternalMessageInfo

func (m *GetWorkflowExecutionMetricsResponse) GetMetrics() []*Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type ListWorkflowExecutionsRequest struct {
	Namespace               string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	WorkflowTemplateUid     string   `protobuf:"bytes,2,opt,name=workflowTemplateUid,proto3" json:"workflowTemplateUid,omitempty"`
	WorkflowTemplateVersion string   `protobuf:"bytes,3,opt,name=workflowTemplateVersion,proto3" json:"workflowTemplateVersion,omitempty"`
	PageSize                int32    `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Page                    int32    `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *ListWorkflowExecutionsRequest) Reset()         { *m = ListWorkflowExecutionsRequest{} }
func (m *ListWorkflowExecutionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListWorkflowExecutionsRequest) ProtoMessage()    {}
func (*ListWorkflowExecutionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{9}
}

func (m *ListWorkflowExecutionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkflowExecutionsRequest.Unmarshal(m, b)
}
func (m *ListWorkflowExecutionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkflowExecutionsRequest.Marshal(b, m, deterministic)
}
func (m *ListWorkflowExecutionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkflowExecutionsRequest.Merge(m, src)
}
func (m *ListWorkflowExecutionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListWorkflowExecutionsRequest.Size(m)
}
func (m *ListWorkflowExecutionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkflowExecutionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkflowExecutionsRequest proto.InternalMessageInfo

func (m *ListWorkflowExecutionsRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListWorkflowExecutionsRequest) GetWorkflowTemplateUid() string {
	if m != nil {
		return m.WorkflowTemplateUid
	}
	return ""
}

func (m *ListWorkflowExecutionsRequest) GetWorkflowTemplateVersion() string {
	if m != nil {
		return m.WorkflowTemplateVersion
	}
	return ""
}

func (m *ListWorkflowExecutionsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListWorkflowExecutionsRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type ListWorkflowExecutionsResponse struct {
	Count                int32                `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	WorkflowExecutions   []*WorkflowExecution `protobuf:"bytes,2,rep,name=workflowExecutions,proto3" json:"workflowExecutions,omitempty"`
	Page                 int32                `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Pages                int32                `protobuf:"varint,4,opt,name=pages,proto3" json:"pages,omitempty"`
	TotalCount           int32                `protobuf:"varint,5,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListWorkflowExecutionsResponse) Reset()         { *m = ListWorkflowExecutionsResponse{} }
func (m *ListWorkflowExecutionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListWorkflowExecutionsResponse) ProtoMessage()    {}
func (*ListWorkflowExecutionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{10}
}

func (m *ListWorkflowExecutionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWorkflowExecutionsResponse.Unmarshal(m, b)
}
func (m *ListWorkflowExecutionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWorkflowExecutionsResponse.Marshal(b, m, deterministic)
}
func (m *ListWorkflowExecutionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWorkflowExecutionsResponse.Merge(m, src)
}
func (m *ListWorkflowExecutionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListWorkflowExecutionsResponse.Size(m)
}
func (m *ListWorkflowExecutionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWorkflowExecutionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWorkflowExecutionsResponse proto.InternalMessageInfo

func (m *ListWorkflowExecutionsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ListWorkflowExecutionsResponse) GetWorkflowExecutions() []*WorkflowExecution {
	if m != nil {
		return m.WorkflowExecutions
	}
	return nil
}

func (m *ListWorkflowExecutionsResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListWorkflowExecutionsResponse) GetPages() int32 {
	if m != nil {
		return m.Pages
	}
	return 0
}

func (m *ListWorkflowExecutionsResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type LogEntry struct {
	Timestamp            string   `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{11}
}

func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (m *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(m, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *LogEntry) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type WorkflowExecution struct {
	CreatedAt            string                        `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	Uid                  string                        `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string                        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Phase                string                        `protobuf:"bytes,4,opt,name=phase,proto3" json:"phase,omitempty"`
	StartedAt            string                        `protobuf:"bytes,5,opt,name=startedAt,proto3" json:"startedAt,omitempty"`
	FinishedAt           string                        `protobuf:"bytes,6,opt,name=finishedAt,proto3" json:"finishedAt,omitempty"`
	Manifest             string                        `protobuf:"bytes,7,opt,name=manifest,proto3" json:"manifest,omitempty"`
	Parameters           []*WorkflowExecutionParameter `protobuf:"bytes,8,rep,name=parameters,proto3" json:"parameters,omitempty"`
	WorkflowTemplate     *WorkflowTemplate             `protobuf:"bytes,9,opt,name=workflowTemplate,proto3" json:"workflowTemplate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *WorkflowExecution) Reset()         { *m = WorkflowExecution{} }
func (m *WorkflowExecution) String() string { return proto.CompactTextString(m) }
func (*WorkflowExecution) ProtoMessage()    {}
func (*WorkflowExecution) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{12}
}

func (m *WorkflowExecution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowExecution.Unmarshal(m, b)
}
func (m *WorkflowExecution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowExecution.Marshal(b, m, deterministic)
}
func (m *WorkflowExecution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowExecution.Merge(m, src)
}
func (m *WorkflowExecution) XXX_Size() int {
	return xxx_messageInfo_WorkflowExecution.Size(m)
}
func (m *WorkflowExecution) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowExecution.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowExecution proto.InternalMessageInfo

func (m *WorkflowExecution) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *WorkflowExecution) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *WorkflowExecution) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowExecution) GetPhase() string {
	if m != nil {
		return m.Phase
	}
	return ""
}

func (m *WorkflowExecution) GetStartedAt() string {
	if m != nil {
		return m.StartedAt
	}
	return ""
}

func (m *WorkflowExecution) GetFinishedAt() string {
	if m != nil {
		return m.FinishedAt
	}
	return ""
}

func (m *WorkflowExecution) GetManifest() string {
	if m != nil {
		return m.Manifest
	}
	return ""
}

func (m *WorkflowExecution) GetParameters() []*WorkflowExecutionParameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *WorkflowExecution) GetWorkflowTemplate() *WorkflowTemplate {
	if m != nil {
		return m.WorkflowTemplate
	}
	return nil
}

type WorkflowExecutionParameter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowExecutionParameter) Reset()         { *m = WorkflowExecutionParameter{} }
func (m *WorkflowExecutionParameter) String() string { return proto.CompactTextString(m) }
func (*WorkflowExecutionParameter) ProtoMessage()    {}
func (*WorkflowExecutionParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{13}
}

func (m *WorkflowExecutionParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowExecutionParameter.Unmarshal(m, b)
}
func (m *WorkflowExecutionParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowExecutionParameter.Marshal(b, m, deterministic)
}
func (m *WorkflowExecutionParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowExecutionParameter.Merge(m, src)
}
func (m *WorkflowExecutionParameter) XXX_Size() int {
	return xxx_messageInfo_WorkflowExecutionParameter.Size(m)
}
func (m *WorkflowExecutionParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowExecutionParameter.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowExecutionParameter proto.InternalMessageInfo

func (m *WorkflowExecutionParameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowExecutionParameter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ArtifactResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArtifactResponse) Reset()         { *m = ArtifactResponse{} }
func (m *ArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*ArtifactResponse) ProtoMessage()    {}
func (*ArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{14}
}

func (m *ArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtifactResponse.Unmarshal(m, b)
}
func (m *ArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtifactResponse.Marshal(b, m, deterministic)
}
func (m *ArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtifactResponse.Merge(m, src)
}
func (m *ArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_ArtifactResponse.Size(m)
}
func (m *ArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArtifactResponse proto.InternalMessageInfo

func (m *ArtifactResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type File struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size                 int64    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	ContentType          string   `protobuf:"bytes,4,opt,name=contentType,proto3" json:"contentType,omitempty"`
	LastModified         string   `protobuf:"bytes,5,opt,name=lastModified,proto3" json:"lastModified,omitempty"`
	Directory            bool     `protobuf:"varint,6,opt,name=directory,proto3" json:"directory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{15}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *File) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *File) GetLastModified() string {
	if m != nil {
		return m.LastModified
	}
	return ""
}

func (m *File) GetDirectory() bool {
	if m != nil {
		return m.Directory
	}
	return false
}

type ListFilesRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFilesRequest) Reset()         { *m = ListFilesRequest{} }
func (m *ListFilesRequest) String() string { return proto.CompactTextString(m) }
func (*ListFilesRequest) ProtoMessage()    {}
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{16}
}

func (m *ListFilesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilesRequest.Unmarshal(m, b)
}
func (m *ListFilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilesRequest.Marshal(b, m, deterministic)
}
func (m *ListFilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilesRequest.Merge(m, src)
}
func (m *ListFilesRequest) XXX_Size() int {
	return xxx_messageInfo_ListFilesRequest.Size(m)
}
func (m *ListFilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilesRequest proto.InternalMessageInfo

func (m *ListFilesRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListFilesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListFilesRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ListFilesResponse struct {
	Files                []*File  `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListFilesResponse) Reset()         { *m = ListFilesResponse{} }
func (m *ListFilesResponse) String() string { return proto.CompactTextString(m) }
func (*ListFilesResponse) ProtoMessage()    {}
func (*ListFilesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{17}
}

func (m *ListFilesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListFilesResponse.Unmarshal(m, b)
}
func (m *ListFilesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListFilesResponse.Marshal(b, m, deterministic)
}
func (m *ListFilesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListFilesResponse.Merge(m, src)
}
func (m *ListFilesResponse) XXX_Size() int {
	return xxx_messageInfo_ListFilesResponse.Size(m)
}
func (m *ListFilesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListFilesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListFilesResponse proto.InternalMessageInfo

func (m *ListFilesResponse) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateWorkflowExecutionRequest)(nil), "api.CreateWorkflowExecutionRequest")
	proto.RegisterType((*GetWorkflowExecutionRequest)(nil), "api.GetWorkflowExecutionRequest")
	proto.RegisterType((*GetArtifactRequest)(nil), "api.GetArtifactRequest")
	proto.RegisterType((*WatchWorkflowExecutionRequest)(nil), "api.WatchWorkflowExecutionRequest")
	proto.RegisterType((*ResubmitWorkflowExecutionRequest)(nil), "api.ResubmitWorkflowExecutionRequest")
	proto.RegisterType((*TerminateWorkflowExecutionRequest)(nil), "api.TerminateWorkflowExecutionRequest")
	proto.RegisterType((*GetWorkflowExecutionLogsRequest)(nil), "api.GetWorkflowExecutionLogsRequest")
	proto.RegisterType((*GetWorkflowExecutionMetricsRequest)(nil), "api.GetWorkflowExecutionMetricsRequest")
	proto.RegisterType((*GetWorkflowExecutionMetricsResponse)(nil), "api.GetWorkflowExecutionMetricsResponse")
	proto.RegisterType((*ListWorkflowExecutionsRequest)(nil), "api.ListWorkflowExecutionsRequest")
	proto.RegisterType((*ListWorkflowExecutionsResponse)(nil), "api.ListWorkflowExecutionsResponse")
	proto.RegisterType((*LogEntry)(nil), "api.LogEntry")
	proto.RegisterType((*WorkflowExecution)(nil), "api.WorkflowExecution")
	proto.RegisterType((*WorkflowExecutionParameter)(nil), "api.WorkflowExecutionParameter")
	proto.RegisterType((*ArtifactResponse)(nil), "api.ArtifactResponse")
	proto.RegisterType((*File)(nil), "api.File")
	proto.RegisterType((*ListFilesRequest)(nil), "api.ListFilesRequest")
	proto.RegisterType((*ListFilesResponse)(nil), "api.ListFilesResponse")
}

func init() { proto.RegisterFile("workflow.proto", fileDescriptor_892c7f566756b0be) }

var fileDescriptor_892c7f566756b0be = []byte{
	// 1521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcd, 0x6f, 0x1b, 0x45,
	0x14, 0x67, 0xec, 0xa4, 0x4d, 0x5e, 0x52, 0x48, 0x5f, 0xdb, 0xc4, 0x6c, 0x9b, 0xc6, 0xdd, 0x7e,
	0x90, 0x56, 0xad, 0xb7, 0x0d, 0x05, 0x55, 0xa1, 0x1f, 0x24, 0x6d, 0x12, 0x10, 0x09, 0x05, 0x37,
	0xa5, 0xa5, 0x17, 0x98, 0xac, 0xc7, 0xce, 0x12, 0x7b, 0x77, 0xd9, 0x19, 0x27, 0x4d, 0x23, 0x1f,
	0xf8, 0x38, 0x20, 0x21, 0x21, 0x41, 0x41, 0x42, 0x70, 0x01, 0x09, 0x21, 0xfe, 0x04, 0x4e, 0x1c,
	0x90, 0x90, 0x90, 0x38, 0xf6, 0xc4, 0x1d, 0xfe, 0x0f, 0x34, 0xb3, 0xb3, 0x1b, 0xc7, 0xde, 0x75,
	0x12, 0x37, 0x9c, 0x3c, 0xf3, 0xde, 0x9b, 0x37, 0xbf, 0xf7, 0xde, 0xcc, 0x9b, 0xdf, 0x1a, 0x9e,
	0x5d, 0xf3, 0x82, 0x95, 0x72, 0xd5, 0x5b, 0x2b, 0xf8, 0x81, 0x27, 0x3c, 0xcc, 0x52, 0xdf, 0x31,
	0x8e, 0x55, 0x3c, 0xaf, 0x52, 0x65, 0x16, 0xf5, 0x1d, 0x8b, 0xba, 0xae, 0x27, 0xa8, 0x70, 0x3c,
	0x97, 0x87, 0x26, 0xc6, 0x51, 0xad, 0x55, 0xb3, 0xa5, 0x7a, 0xd9, 0x62, 0x35, 0x5f, 0xac, 0x6b,
	0xe5, 0x79, 0xf5, 0x63, 0x5f, 0xa8, 0x30, 0xf7, 0x02, 0x5f, 0xa3, 0x95, 0x0a, 0x0b, 0x2c, 0xcf,
	0x57, 0xcb, 0x13, 0x5c, 0x8d, 0x44, 0xbb, 0xbf, 0x27, 0x58, 0xcd, 0xaf, 0x52, 0xc1, 0xb4, 0x62,
	0xb0, 0xc6, 0x44, 0xe0, 0xd8, 0xe1, 0xcc, 0xfc, 0x94, 0xc0, 0xf1, 0x9b, 0x01, 0xa3, 0x82, 0xdd,
	0xd3, 0xf6, 0x33, 0x0f, 0x99, 0x5d, 0x97, 0x9e, 0x8a, 0xec, 0xc3, 0x3a, 0xe3, 0x02, 0x8f, 0x41,
	0xbf, 0x4b, 0x6b, 0x8c, 0xfb, 0xd4, 0x66, 0x39, 0x92, 0x27, 0xe3, 0xfd, 0xc5, 0x4d, 0x01, 0xde,
	0x82, 0x83, 0x6b, 0xad, 0x2b, 0x73, 0x99, 0x3c, 0x19, 0x1f, 0x98, 0x18, 0x2e, 0x50, 0xdf, 0x29,
	0xb4, 0xfb, 0x6d, 0x5f, 0x60, 0xde, 0x86, 0xa3, 0x73, 0x4c, 0x74, 0x09, 0x01, 0xa1, 0x47, 0x4e,
	0xd4, 0xae, 0xfd, 0x45, 0x35, 0x36, 0xef, 0x03, 0xce, 0x31, 0x31, 0x15, 0x08, 0xa7, 0x4c, 0x6d,
	0xd1, 0xb5, 0x1f, 0x1c, 0x82, 0xec, 0x0a, 0x5b, 0xcf, 0x65, 0x95, 0x48, 0x0e, 0xcd, 0xb7, 0x61,
	0xf4, 0x1e, 0x15, 0xf6, 0xf2, 0x1e, 0x82, 0x5d, 0x84, 0x7c, 0x91, 0xf1, 0xfa, 0x52, 0xcd, 0xd9,
	0xcb, 0x14, 0xdc, 0x85, 0x13, 0x8b, 0x2c, 0xa8, 0x39, 0x6e, 0xf7, 0xc5, 0x4d, 0x72, 0xfb, 0x98,
	0xc0, 0x58, 0x52, 0xad, 0xe6, 0xbd, 0x0a, 0xef, 0x3e, 0xcf, 0x39, 0xd8, 0xef, 0x7b, 0xa5, 0x37,
	0xa5, 0x38, 0xcc, 0x75, 0x34, 0xc5, 0x53, 0x70, 0xc0, 0xf6, 0x5c, 0x41, 0x1d, 0x97, 0x05, 0x4a,
	0xdf, 0xa3, 0xf4, 0x5b, 0x85, 0xa6, 0x0f, 0x66, 0x12, 0xa8, 0x05, 0x75, 0xd6, 0xff, 0x0f, 0x5c,
	0xe6, 0x3c, 0x9c, 0xec, 0xb8, 0x23, 0xf7, 0x3d, 0x97, 0x33, 0x3c, 0x0d, 0xfb, 0xc3, 0x0b, 0xc7,
	0x73, 0x24, 0x9f, 0x1d, 0x1f, 0x98, 0x18, 0x50, 0xb7, 0x22, 0x34, 0x2b, 0x46, 0x3a, 0xf3, 0x6f,
	0x02, 0xa3, 0xf3, 0x0e, 0x6f, 0xf7, 0xb7, 0x43, 0xec, 0x17, 0xe1, 0x50, 0x74, 0xab, 0x16, 0xf5,
	0x7d, 0xbf, 0xeb, 0x94, 0x74, 0x28, 0x49, 0x2a, 0xbc, 0x02, 0x23, 0xad, 0xe2, 0x77, 0x58, 0xc0,
	0xe5, 0xf5, 0x0d, 0x23, 0x4d, 0x53, 0xa3, 0x01, 0x7d, 0x3e, 0xad, 0xb0, 0x3b, 0xce, 0xa3, 0xb0,
	0x18, 0xbd, 0xc5, 0x78, 0x2e, 0x73, 0x28, 0xc7, 0xb9, 0x5e, 0x25, 0x57, 0x63, 0xf3, 0x4f, 0x02,
	0xc7, 0xd3, 0x62, 0xd3, 0x59, 0x3a, 0x0c, 0xbd, 0xb6, 0x57, 0x77, 0x85, 0x0a, 0xac, 0xb7, 0x18,
	0x4e, 0x70, 0x16, 0xb0, 0xad, 0x55, 0xf0, 0x5c, 0x46, 0xa5, 0x31, 0xad, 0xb9, 0x24, 0xac, 0x88,
	0x41, 0x65, 0x37, 0x41, 0xc9, 0x1d, 0xe5, 0x2f, 0xd7, 0x11, 0x84, 0x13, 0x3c, 0x0e, 0x20, 0x3c,
	0x41, 0xab, 0x37, 0x15, 0x98, 0x30, 0x88, 0x26, 0x89, 0x39, 0x0d, 0x7d, 0xf3, 0x5e, 0x65, 0xc6,
	0x15, 0xc1, 0xba, 0x2c, 0x88, 0x70, 0x6a, 0x8c, 0x0b, 0x5a, 0xf3, 0xa3, 0x82, 0xc4, 0x02, 0x79,
	0x70, 0xe4, 0x09, 0x65, 0xae, 0xd0, 0x45, 0x88, 0xa6, 0xe6, 0x5f, 0x19, 0x38, 0xd8, 0x86, 0x5b,
	0x7a, 0xb3, 0x55, 0x1f, 0x2e, 0x4d, 0x89, 0xc8, 0x5b, 0x2c, 0x90, 0x6d, 0xa8, 0x1e, 0x97, 0x53,
	0x0e, 0xe3, 0xc3, 0x9a, 0x6d, 0x3a, 0xac, 0x32, 0xa6, 0x65, 0xca, 0xa3, 0x2b, 0x12, 0x4e, 0xa4,
	0x67, 0x2e, 0x68, 0x10, 0x7a, 0xee, 0x0d, 0x3d, 0xc7, 0x02, 0x19, 0x71, 0xd9, 0x71, 0x1d, 0xbe,
	0xac, 0xd4, 0xfb, 0x94, 0xba, 0x49, 0x22, 0x8b, 0x5d, 0xa3, 0xae, 0x53, 0x66, 0x5c, 0xe4, 0xf6,
	0x2b, 0x6d, 0x3c, 0xc7, 0x1b, 0x00, 0x3e, 0x0d, 0x68, 0x8d, 0x09, 0x16, 0xf0, 0x5c, 0x9f, 0xaa,
	0xcb, 0x58, 0x72, 0x5d, 0xde, 0x8a, 0xec, 0x8a, 0x4d, 0x4b, 0x70, 0x0a, 0x86, 0x5a, 0x0f, 0x59,
	0xae, 0x5f, 0xbd, 0x1d, 0x47, 0xb6, 0xb8, 0x89, 0x94, 0xc5, 0x36, 0x73, 0x73, 0x16, 0x8c, 0xf4,
	0xcd, 0xe2, 0x2c, 0x91, 0xad, 0x59, 0x5a, 0xa5, 0xd5, 0x7a, 0x74, 0xcf, 0xc3, 0x89, 0x79, 0x06,
	0x86, 0x36, 0x5f, 0x0b, 0x7d, 0x2a, 0x11, 0x7a, 0x4a, 0x54, 0x50, 0xb5, 0x7a, 0xb0, 0xa8, 0xc6,
	0xe6, 0xcf, 0x04, 0x7a, 0x66, 0x9d, 0xaa, 0x3e, 0xe9, 0x62, 0x39, 0x72, 0x2d, 0xc7, 0x89, 0x1d,
	0x04, 0xa1, 0x87, 0xcb, 0x9b, 0x22, 0x0b, 0x95, 0x2d, 0xaa, 0x31, 0xe6, 0x61, 0x40, 0x9f, 0x86,
	0xc5, 0x75, 0x3f, 0x2a, 0x57, 0xb3, 0x08, 0x4d, 0x18, 0xac, 0x52, 0x2e, 0x16, 0xbc, 0x92, 0x53,
	0x76, 0x58, 0x49, 0xd7, 0x6d, 0x8b, 0x4c, 0x16, 0xb6, 0xe4, 0x04, 0xcc, 0x16, 0x5e, 0xb0, 0xae,
	0x2a, 0xd7, 0x57, 0xdc, 0x14, 0x98, 0xf7, 0x61, 0x48, 0x5e, 0x3a, 0x89, 0xf5, 0x29, 0xfa, 0x5f,
	0x14, 0x65, 0x76, 0x33, 0x4a, 0xf3, 0x32, 0x1c, 0x6c, 0xf2, 0xac, 0x73, 0x35, 0x06, 0xbd, 0x65,
	0x29, 0xd0, 0x5d, 0xae, 0x5f, 0xd5, 0x4f, 0x9a, 0x14, 0x43, 0xf9, 0xc4, 0xe7, 0x23, 0xf0, 0x5c,
	0x54, 0xa9, 0x3b, 0x2c, 0x58, 0x75, 0x6c, 0x86, 0x3f, 0x10, 0x18, 0x49, 0x61, 0x1f, 0x78, 0x52,
	0x79, 0xe8, 0xcc, 0x4d, 0x8c, 0x94, 0x2e, 0x60, 0xbe, 0xf6, 0xf1, 0x93, 0x7f, 0x1e, 0x67, 0xa6,
	0xcd, 0x0b, 0x92, 0x68, 0x71, 0x6b, 0xf5, 0xd2, 0x12, 0x13, 0xf4, 0x92, 0xb5, 0x11, 0x07, 0xdb,
	0xb0, 0x62, 0x7e, 0xc4, 0xe2, 0x46, 0x31, 0xd9, 0xce, 0x4c, 0xf0, 0x0b, 0x02, 0x87, 0x93, 0xfa,
	0x3c, 0xe6, 0xd5, 0xd6, 0x1d, 0x58, 0x4b, 0x2a, 0xb8, 0xab, 0x0a, 0xdc, 0xcb, 0x78, 0x79, 0x57,
	0xe0, 0x42, 0x7d, 0x03, 0xbf, 0x25, 0x30, 0x9c, 0xdc, 0x4d, 0xd1, 0x54, 0x1b, 0x76, 0x7c, 0x46,
	0x8c, 0x93, 0x1d, 0x6d, 0xc2, 0x62, 0x9a, 0x2f, 0x29, 0x84, 0x16, 0xee, 0x2e, 0x7d, 0xf8, 0x1d,
	0x81, 0xe1, 0x64, 0x6e, 0xa4, 0xa1, 0x75, 0x24, 0x4e, 0xa9, 0xf9, 0x9a, 0x56, 0x68, 0xae, 0xe2,
	0x64, 0x37, 0xf9, 0xb2, 0xd6, 0xe4, 0x9e, 0x17, 0x09, 0xfe, 0x46, 0x20, 0x97, 0xc6, 0x5b, 0xf0,
	0x54, 0x6a, 0x31, 0x9b, 0x68, 0x8d, 0x71, 0x20, 0xcc, 0x9d, 0x7e, 0x00, 0xcc, 0x15, 0x85, 0x8b,
	0xa1, 0xdd, 0x15, 0x2e, 0xdf, 0x2b, 0x71, 0x6b, 0x43, 0xb3, 0x89, 0x86, 0x15, 0xd3, 0x19, 0x6e,
	0x6d, 0x6c, 0xa1, 0x36, 0x0d, 0xab, 0xea, 0x55, 0xf8, 0x45, 0x82, 0x7f, 0x90, 0x64, 0x92, 0xac,
	0x19, 0x07, 0xbe, 0x90, 0x1a, 0xc3, 0x56, 0x16, 0x64, 0x8c, 0x6f, 0x6f, 0xa8, 0xcf, 0xc1, 0x1d,
	0x15, 0xe1, 0x02, 0xbe, 0xb1, 0x17, 0x11, 0x6a, 0xaa, 0x83, 0x3f, 0x12, 0x78, 0x3e, 0x95, 0xee,
	0xe2, 0x69, 0x05, 0x6e, 0x3b, 0x3a, 0x9c, 0x7a, 0x56, 0x66, 0x14, 0xe2, 0x1b, 0xc6, 0xb5, 0xae,
	0x10, 0x07, 0x7a, 0x5b, 0xfc, 0x89, 0x80, 0x91, 0x4e, 0x9e, 0xf1, 0x8c, 0xda, 0x7d, 0x5b, 0x76,
	0x6d, 0x0c, 0x17, 0xc2, 0x0f, 0xba, 0x42, 0xf4, 0x41, 0x57, 0x98, 0x91, 0x1f, 0x74, 0xe6, 0xac,
	0x42, 0xf9, 0xaa, 0x71, 0xbd, 0x2b, 0x94, 0x22, 0xda, 0x17, 0xbf, 0x27, 0x30, 0xbc, 0xb5, 0x43,
	0x46, 0xef, 0xa2, 0xbe, 0x70, 0xc9, 0xca, 0x08, 0x5e, 0xf2, 0x23, 0x1b, 0xa1, 0x33, 0xcf, 0xef,
	0x00, 0x5d, 0xf4, 0x71, 0xc9, 0x27, 0xdb, 0x9e, 0x66, 0xfc, 0x97, 0xc0, 0xe8, 0x5d, 0xbf, 0x94,
	0x00, 0x20, 0x62, 0x92, 0x67, 0x15, 0x80, 0x8e, 0x36, 0xdb, 0x60, 0xfd, 0x88, 0x28, 0xb0, 0x1b,
	0x46, 0x65, 0x37, 0x60, 0xad, 0x8d, 0x56, 0xb0, 0x85, 0xba, 0x53, 0x6a, 0x58, 0xab, 0xe1, 0x9e,
	0x49, 0x7a, 0xad, 0x6a, 0x24, 0xc4, 0xf9, 0x3b, 0x81, 0xd1, 0xe4, 0x44, 0x47, 0x71, 0x3e, 0x45,
	0x31, 0xca, 0x2a, 0xbe, 0xf7, 0xcd, 0xf9, 0xbd, 0x8c, 0x2f, 0x21, 0x88, 0x27, 0x04, 0x0e, 0x35,
	0xb5, 0x84, 0x58, 0x3e, 0xd6, 0xda, 0x2c, 0x76, 0x88, 0xfb, 0x93, 0xb0, 0x30, 0x0d, 0x9c, 0xd8,
	0x1d, 0x70, 0x89, 0xf3, 0xc1, 0x1c, 0xce, 0xec, 0x7e, 0x55, 0x53, 0xf5, 0xa2, 0x62, 0xe1, 0xaf,
	0x04, 0x8e, 0x35, 0xbf, 0x75, 0x2d, 0x85, 0xe1, 0x38, 0xde, 0xf6, 0x1c, 0xb6, 0x9a, 0x44, 0x71,
	0x9e, 0xdd, 0x81, 0xa5, 0x6e, 0x9b, 0x37, 0x55, 0xe8, 0xd7, 0xf0, 0x95, 0xa7, 0x08, 0x02, 0xbf,
	0x26, 0x70, 0x24, 0x69, 0x37, 0x8e, 0x27, 0x52, 0x91, 0xc4, 0x60, 0xcd, 0x4e, 0x26, 0x1a, 0xe5,
	0x65, 0x85, 0xb2, 0x80, 0xbb, 0xba, 0xe6, 0xf8, 0x0b, 0x81, 0x91, 0xa9, 0xc0, 0x5e, 0x76, 0x56,
	0xdb, 0x7b, 0x4e, 0xc8, 0x2d, 0x52, 0xb4, 0x11, 0xb4, 0x53, 0x9d, 0x8d, 0x34, 0x38, 0xfd, 0xe6,
	0x1b, 0x93, 0x5d, 0xa4, 0x90, 0x86, 0xbe, 0x25, 0x75, 0x1b, 0x68, 0xfa, 0x13, 0x08, 0x47, 0xa2,
	0xa3, 0xdc, 0xf2, 0xb7, 0x90, 0x3e, 0xc2, 0xad, 0xf4, 0xdf, 0xbc, 0xad, 0x30, 0xbc, 0x8e, 0x73,
	0x5d, 0x75, 0x69, 0xaa, 0xdd, 0x71, 0x6b, 0x63, 0x85, 0xad, 0x5f, 0x3b, 0x77, 0xae, 0x81, 0x9f,
	0x11, 0xe8, 0x8f, 0x99, 0x33, 0x1e, 0x89, 0x6b, 0xd4, 0xcc, 0xd1, 0xf5, 0xcb, 0xd6, 0x46, 0xb0,
	0xcd, 0x79, 0x85, 0x66, 0x16, 0x6f, 0x75, 0x85, 0x46, 0x71, 0x70, 0x6b, 0x43, 0xf2, 0x77, 0x09,
	0x65, 0xfa, 0x1b, 0xf2, 0xd5, 0xd4, 0x97, 0xe4, 0x5c, 0x86, 0x64, 0x26, 0x86, 0xa8, 0xef, 0x57,
	0x1d, 0x5b, 0xfd, 0x7b, 0x68, 0x7d, 0xc0, 0x3d, 0x77, 0xb2, 0x4d, 0xf2, 0xe0, 0x5d, 0xb8, 0x07,
	0xfb, 0x96, 0x18, 0x0d, 0x58, 0x80, 0x0b, 0x7d, 0x19, 0xbc, 0x32, 0x55, 0x17, 0xcb, 0xcc, 0x15,
	0xda, 0x28, 0x2f, 0xbc, 0x15, 0xe6, 0x9e, 0xcf, 0xfb, 0x01, 0x2b, 0x3b, 0x0f, 0x59, 0x29, 0xbf,
	0xb4, 0x9e, 0x9f, 0x56, 0xd6, 0x93, 0xfa, 0x37, 0x7f, 0x55, 0x99, 0x5c, 0x37, 0x0e, 0xd0, 0xba,
	0x58, 0xf6, 0x02, 0xe7, 0x51, 0xb8, 0x30, 0xb3, 0x34, 0x08, 0x10, 0xbb, 0x7e, 0x66, 0x69, 0x9f,
	0x7a, 0x29, 0x5f, 0xfc, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x71, 0x45, 0x2d, 0x3d, 0x15, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkflowServiceClient is the client API for WorkflowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkflowServiceClient interface {
	// Creates a Workflow
	CreateWorkflowExecution(ctx context.Context, in *CreateWorkflowExecutionRequest, opts ...grpc.CallOption) (*WorkflowExecution, error)
	GetWorkflowExecution(ctx context.Context, in *GetWorkflowExecutionRequest, opts ...grpc.CallOption) (*WorkflowExecution, error)
	ListWorkflowExecutions(ctx context.Context, in *ListWorkflowExecutionsRequest, opts ...grpc.CallOption) (*ListWorkflowExecutionsResponse, error)
	WatchWorkflowExecution(ctx context.Context, in *WatchWorkflowExecutionRequest, opts ...grpc.CallOption) (WorkflowService_WatchWorkflowExecutionClient, error)
	GetWorkflowExecutionLogs(ctx context.Context, in *GetWorkflowExecutionLogsRequest, opts ...grpc.CallOption) (WorkflowService_GetWorkflowExecutionLogsClient, error)
	GetWorkflowExecutionMetrics(ctx context.Context, in *GetWorkflowExecutionMetricsRequest, opts ...grpc.CallOption) (*GetWorkflowExecutionMetricsResponse, error)
	ResubmitWorkflowExecution(ctx context.Context, in *ResubmitWorkflowExecutionRequest, opts ...grpc.CallOption) (*WorkflowExecution, error)
	TerminateWorkflowExecution(ctx context.Context, in *TerminateWorkflowExecutionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateWorkflowTemplate(ctx context.Context, in *CreateWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error)
	UpdateWorkflowTemplateVersion(ctx context.Context, in *UpdateWorkflowTemplateVersionRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error)
	CreateWorkflowTemplateVersion(ctx context.Context, in *CreateWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error)
	GetWorkflowTemplate(ctx context.Context, in *GetWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error)
	ListWorkflowTemplateVersions(ctx context.Context, in *ListWorkflowTemplateVersionsRequest, opts ...grpc.CallOption) (*ListWorkflowTemplateVersionsResponse, error)
	ListWorkflowTemplates(ctx context.Context, in *ListWorkflowTemplatesRequest, opts ...grpc.CallOption) (*ListWorkflowTemplatesResponse, error)
	ArchiveWorkflowTemplate(ctx context.Context, in *ArchiveWorkflowTemplateRequest, opts ...grpc.CallOption) (*ArchiveWorkflowTemplateResponse, error)
	GetArtifact(ctx context.Context, in *GetArtifactRequest, opts ...grpc.CallOption) (*ArtifactResponse, error)
	ListFiles(ctx context.Context, in *ListFilesRequest, opts ...grpc.CallOption) (*ListFilesResponse, error)
}

type workflowServiceClient struct {
	cc *grpc.ClientConn
}

func NewWorkflowServiceClient(cc *grpc.ClientConn) WorkflowServiceClient {
	return &workflowServiceClient{cc}
}

func (c *workflowServiceClient) CreateWorkflowExecution(ctx context.Context, in *CreateWorkflowExecutionRequest, opts ...grpc.CallOption) (*WorkflowExecution, error) {
	out := new(WorkflowExecution)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/CreateWorkflowExecution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) GetWorkflowExecution(ctx context.Context, in *GetWorkflowExecutionRequest, opts ...grpc.CallOption) (*WorkflowExecution, error) {
	out := new(WorkflowExecution)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/GetWorkflowExecution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ListWorkflowExecutions(ctx context.Context, in *ListWorkflowExecutionsRequest, opts ...grpc.CallOption) (*ListWorkflowExecutionsResponse, error) {
	out := new(ListWorkflowExecutionsResponse)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/ListWorkflowExecutions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) WatchWorkflowExecution(ctx context.Context, in *WatchWorkflowExecutionRequest, opts ...grpc.CallOption) (WorkflowService_WatchWorkflowExecutionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WorkflowService_serviceDesc.Streams[0], "/api.WorkflowService/WatchWorkflowExecution", opts...)
	if err != nil {
		return nil, err
	}
	x := &workflowServiceWatchWorkflowExecutionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WorkflowService_WatchWorkflowExecutionClient interface {
	Recv() (*WorkflowExecution, error)
	grpc.ClientStream
}

type workflowServiceWatchWorkflowExecutionClient struct {
	grpc.ClientStream
}

func (x *workflowServiceWatchWorkflowExecutionClient) Recv() (*WorkflowExecution, error) {
	m := new(WorkflowExecution)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *workflowServiceClient) GetWorkflowExecutionLogs(ctx context.Context, in *GetWorkflowExecutionLogsRequest, opts ...grpc.CallOption) (WorkflowService_GetWorkflowExecutionLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WorkflowService_serviceDesc.Streams[1], "/api.WorkflowService/GetWorkflowExecutionLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &workflowServiceGetWorkflowExecutionLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WorkflowService_GetWorkflowExecutionLogsClient interface {
	Recv() (*LogEntry, error)
	grpc.ClientStream
}

type workflowServiceGetWorkflowExecutionLogsClient struct {
	grpc.ClientStream
}

func (x *workflowServiceGetWorkflowExecutionLogsClient) Recv() (*LogEntry, error) {
	m := new(LogEntry)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *workflowServiceClient) GetWorkflowExecutionMetrics(ctx context.Context, in *GetWorkflowExecutionMetricsRequest, opts ...grpc.CallOption) (*GetWorkflowExecutionMetricsResponse, error) {
	out := new(GetWorkflowExecutionMetricsResponse)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/GetWorkflowExecutionMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ResubmitWorkflowExecution(ctx context.Context, in *ResubmitWorkflowExecutionRequest, opts ...grpc.CallOption) (*WorkflowExecution, error) {
	out := new(WorkflowExecution)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/ResubmitWorkflowExecution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) TerminateWorkflowExecution(ctx context.Context, in *TerminateWorkflowExecutionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/TerminateWorkflowExecution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) CreateWorkflowTemplate(ctx context.Context, in *CreateWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error) {
	out := new(WorkflowTemplate)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/CreateWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) UpdateWorkflowTemplateVersion(ctx context.Context, in *UpdateWorkflowTemplateVersionRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error) {
	out := new(WorkflowTemplate)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/UpdateWorkflowTemplateVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) CreateWorkflowTemplateVersion(ctx context.Context, in *CreateWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error) {
	out := new(WorkflowTemplate)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/CreateWorkflowTemplateVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) GetWorkflowTemplate(ctx context.Context, in *GetWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error) {
	out := new(WorkflowTemplate)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/GetWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ListWorkflowTemplateVersions(ctx context.Context, in *ListWorkflowTemplateVersionsRequest, opts ...grpc.CallOption) (*ListWorkflowTemplateVersionsResponse, error) {
	out := new(ListWorkflowTemplateVersionsResponse)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/ListWorkflowTemplateVersions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ListWorkflowTemplates(ctx context.Context, in *ListWorkflowTemplatesRequest, opts ...grpc.CallOption) (*ListWorkflowTemplatesResponse, error) {
	out := new(ListWorkflowTemplatesResponse)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/ListWorkflowTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ArchiveWorkflowTemplate(ctx context.Context, in *ArchiveWorkflowTemplateRequest, opts ...grpc.CallOption) (*ArchiveWorkflowTemplateResponse, error) {
	out := new(ArchiveWorkflowTemplateResponse)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/ArchiveWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) GetArtifact(ctx context.Context, in *GetArtifactRequest, opts ...grpc.CallOption) (*ArtifactResponse, error) {
	out := new(ArtifactResponse)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/GetArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ListFiles(ctx context.Context, in *ListFilesRequest, opts ...grpc.CallOption) (*ListFilesResponse, error) {
	out := new(ListFilesResponse)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/ListFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkflowServiceServer is the server API for WorkflowService service.
type WorkflowServiceServer interface {
	// Creates a Workflow
	CreateWorkflowExecution(context.Context, *CreateWorkflowExecutionRequest) (*WorkflowExecution, error)
	GetWorkflowExecution(context.Context, *GetWorkflowExecutionRequest) (*WorkflowExecution, error)
	ListWorkflowExecutions(context.Context, *ListWorkflowExecutionsRequest) (*ListWorkflowExecutionsResponse, error)
	WatchWorkflowExecution(*WatchWorkflowExecutionRequest, WorkflowService_WatchWorkflowExecutionServer) error
	GetWorkflowExecutionLogs(*GetWorkflowExecutionLogsRequest, WorkflowService_GetWorkflowExecutionLogsServer) error
	GetWorkflowExecutionMetrics(context.Context, *GetWorkflowExecutionMetricsRequest) (*GetWorkflowExecutionMetricsResponse, error)
	ResubmitWorkflowExecution(context.Context, *ResubmitWorkflowExecutionRequest) (*WorkflowExecution, error)
	TerminateWorkflowExecution(context.Context, *TerminateWorkflowExecutionRequest) (*empty.Empty, error)
	CreateWorkflowTemplate(context.Context, *CreateWorkflowTemplateRequest) (*WorkflowTemplate, error)
	UpdateWorkflowTemplateVersion(context.Context, *UpdateWorkflowTemplateVersionRequest) (*WorkflowTemplate, error)
	CreateWorkflowTemplateVersion(context.Context, *CreateWorkflowTemplateRequest) (*WorkflowTemplate, error)
	GetWorkflowTemplate(context.Context, *GetWorkflowTemplateRequest) (*WorkflowTemplate, error)
	ListWorkflowTemplateVersions(context.Context, *ListWorkflowTemplateVersionsRequest) (*ListWorkflowTemplateVersionsResponse, error)
	ListWorkflowTemplates(context.Context, *ListWorkflowTemplatesRequest) (*ListWorkflowTemplatesResponse, error)
	ArchiveWorkflowTemplate(context.Context, *ArchiveWorkflowTemplateRequest) (*ArchiveWorkflowTemplateResponse, error)
	GetArtifact(context.Context, *GetArtifactRequest) (*ArtifactResponse, error)
	ListFiles(context.Context, *ListFilesRequest) (*ListFilesResponse, error)
}

// UnimplementedWorkflowServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkflowServiceServer struct {
}

func (*UnimplementedWorkflowServiceServer) CreateWorkflowExecution(ctx context.Context, req *CreateWorkflowExecutionRequest) (*WorkflowExecution, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkflowExecution not implemented")
}
func (*UnimplementedWorkflowServiceServer) GetWorkflowExecution(ctx context.Context, req *GetWorkflowExecutionRequest) (*WorkflowExecution, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowExecution not implemented")
}
func (*UnimplementedWorkflowServiceServer) ListWorkflowExecutions(ctx context.Context, req *ListWorkflowExecutionsRequest) (*ListWorkflowExecutionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWorkflowExecutions not implemented")
}
func (*UnimplementedWorkflowServiceServer) WatchWorkflowExecution(req *WatchWorkflowExecutionRequest, srv WorkflowService_WatchWorkflowExecutionServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchWorkflowExecution not implemented")
}
func (*UnimplementedWorkflowServiceServer) GetWorkflowExecutionLogs(req *GetWorkflowExecutionLogsRequest, srv WorkflowService_GetWorkflowExecutionLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetWorkflowExecutionLogs not implemented")
}
func (*UnimplementedWorkflowServiceServer) GetWorkflowExecutionMetrics(ctx context.Context, req *GetWorkflowExecutionMetricsRequest) (*GetWorkflowExecutionMetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowExecutionMetrics not implemented")
}
func (*UnimplementedWorkflowServiceServer) ResubmitWorkflowExecution(ctx context.Context, req *ResubmitWorkflowExecutionRequest) (*WorkflowExecution, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResubmitWorkflowExecution not implemented")
}
func (*UnimplementedWorkflowServiceServer) TerminateWorkflowExecution(ctx context.Context, req *TerminateWorkflowExecutionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateWorkflowExecution not implemented")
}
func (*UnimplementedWorkflowServiceServer) CreateWorkflowTemplate(ctx context.Context, req *CreateWorkflowTemplateRequest) (*WorkflowTemplate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkflowTemplate not implemented")
}
func (*UnimplementedWorkflowServiceServer) UpdateWorkflowTemplateVersion(ctx context.Context, req *UpdateWorkflowTemplateVersionRequest) (*WorkflowTemplate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWorkflowTemplateVersion not implemented")
}
func (*UnimplementedWorkflowServiceServer) CreateWorkflowTemplateVersion(ctx context.Context, req *CreateWorkflowTemplateRequest) (*WorkflowTemplate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkflowTemplateVersion not implemented")
}
func (*UnimplementedWorkflowServiceServer) GetWorkflowTemplate(ctx context.Context, req *GetWorkflowTemplateRequest) (*WorkflowTemplate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowTemplate not implemented")
}
func (*UnimplementedWorkflowServiceServer) ListWorkflowTemplateVersions(ctx context.Context, req *ListWorkflowTemplateVersionsRequest) (*ListWorkflowTemplateVersionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWorkflowTemplateVersions not implemented")
}
func (*UnimplementedWorkflowServiceServer) ListWorkflowTemplates(ctx context.Context, req *ListWorkflowTemplatesRequest) (*ListWorkflowTemplatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWorkflowTemplates not implemented")
}
func (*UnimplementedWorkflowServiceServer) ArchiveWorkflowTemplate(ctx context.Context, req *ArchiveWorkflowTemplateRequest) (*ArchiveWorkflowTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveWorkflowTemplate not implemented")
}
func (*UnimplementedWorkflowServiceServer) GetArtifact(ctx context.Context, req *GetArtifactRequest) (*ArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtifact not implemented")
}
func (*UnimplementedWorkflowServiceServer) ListFiles(ctx context.Context, req *ListFilesRequest) (*ListFilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFiles not implemented")
}

func RegisterWorkflowServiceServer(s *grpc.Server, srv WorkflowServiceServer) {
	s.RegisterService(&_WorkflowService_serviceDesc, srv)
}

func _WorkflowService_CreateWorkflowExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkflowExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).CreateWorkflowExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/CreateWorkflowExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).CreateWorkflowExecution(ctx, req.(*CreateWorkflowExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_GetWorkflowExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkflowExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).GetWorkflowExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/GetWorkflowExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).GetWorkflowExecution(ctx, req.(*GetWorkflowExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ListWorkflowExecutions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkflowExecutionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ListWorkflowExecutions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/ListWorkflowExecutions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ListWorkflowExecutions(ctx, req.(*ListWorkflowExecutionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_WatchWorkflowExecution_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchWorkflowExecutionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WorkflowServiceServer).WatchWorkflowExecution(m, &workflowServiceWatchWorkflowExecutionServer{stream})
}

type WorkflowService_WatchWorkflowExecutionServer interface {
	Send(*WorkflowExecution) error
	grpc.ServerStream
}

type workflowServiceWatchWorkflowExecutionServer struct {
	grpc.ServerStream
}

func (x *workflowServiceWatchWorkflowExecutionServer) Send(m *WorkflowExecution) error {
	return x.ServerStream.SendMsg(m)
}

func _WorkflowService_GetWorkflowExecutionLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetWorkflowExecutionLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WorkflowServiceServer).GetWorkflowExecutionLogs(m, &workflowServiceGetWorkflowExecutionLogsServer{stream})
}

type WorkflowService_GetWorkflowExecutionLogsServer interface {
	Send(*LogEntry) error
	grpc.ServerStream
}

type workflowServiceGetWorkflowExecutionLogsServer struct {
	grpc.ServerStream
}

func (x *workflowServiceGetWorkflowExecutionLogsServer) Send(m *LogEntry) error {
	return x.ServerStream.SendMsg(m)
}

func _WorkflowService_GetWorkflowExecutionMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkflowExecutionMetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).GetWorkflowExecutionMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/GetWorkflowExecutionMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).GetWorkflowExecutionMetrics(ctx, req.(*GetWorkflowExecutionMetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ResubmitWorkflowExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResubmitWorkflowExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ResubmitWorkflowExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/ResubmitWorkflowExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ResubmitWorkflowExecution(ctx, req.(*ResubmitWorkflowExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_TerminateWorkflowExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateWorkflowExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).TerminateWorkflowExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/TerminateWorkflowExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).TerminateWorkflowExecution(ctx, req.(*TerminateWorkflowExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_CreateWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).CreateWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/CreateWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).CreateWorkflowTemplate(ctx, req.(*CreateWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_UpdateWorkflowTemplateVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWorkflowTemplateVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).UpdateWorkflowTemplateVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/UpdateWorkflowTemplateVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).UpdateWorkflowTemplateVersion(ctx, req.(*UpdateWorkflowTemplateVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_CreateWorkflowTemplateVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).CreateWorkflowTemplateVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/CreateWorkflowTemplateVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).CreateWorkflowTemplateVersion(ctx, req.(*CreateWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_GetWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).GetWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/GetWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).GetWorkflowTemplate(ctx, req.(*GetWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ListWorkflowTemplateVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkflowTemplateVersionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ListWorkflowTemplateVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/ListWorkflowTemplateVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ListWorkflowTemplateVersions(ctx, req.(*ListWorkflowTemplateVersionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ListWorkflowTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkflowTemplatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ListWorkflowTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/ListWorkflowTemplates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ListWorkflowTemplates(ctx, req.(*ListWorkflowTemplatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ArchiveWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ArchiveWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/ArchiveWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ArchiveWorkflowTemplate(ctx, req.(*ArchiveWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_GetArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).GetArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/GetArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).GetArtifact(ctx, req.(*GetArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ListFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ListFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/ListFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ListFiles(ctx, req.(*ListFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkflowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.WorkflowService",
	HandlerType: (*WorkflowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWorkflowExecution",
			Handler:    _WorkflowService_CreateWorkflowExecution_Handler,
		},
		{
			MethodName: "GetWorkflowExecution",
			Handler:    _WorkflowService_GetWorkflowExecution_Handler,
		},
		{
			MethodName: "ListWorkflowExecutions",
			Handler:    _WorkflowService_ListWorkflowExecutions_Handler,
		},
		{
			MethodName: "GetWorkflowExecutionMetrics",
			Handler:    _WorkflowService_GetWorkflowExecutionMetrics_Handler,
		},
		{
			MethodName: "ResubmitWorkflowExecution",
			Handler:    _WorkflowService_ResubmitWorkflowExecution_Handler,
		},
		{
			MethodName: "TerminateWorkflowExecution",
			Handler:    _WorkflowService_TerminateWorkflowExecution_Handler,
		},
		{
			MethodName: "CreateWorkflowTemplate",
			Handler:    _WorkflowService_CreateWorkflowTemplate_Handler,
		},
		{
			MethodName: "UpdateWorkflowTemplateVersion",
			Handler:    _WorkflowService_UpdateWorkflowTemplateVersion_Handler,
		},
		{
			MethodName: "CreateWorkflowTemplateVersion",
			Handler:    _WorkflowService_CreateWorkflowTemplateVersion_Handler,
		},
		{
			MethodName: "GetWorkflowTemplate",
			Handler:    _WorkflowService_GetWorkflowTemplate_Handler,
		},
		{
			MethodName: "ListWorkflowTemplateVersions",
			Handler:    _WorkflowService_ListWorkflowTemplateVersions_Handler,
		},
		{
			MethodName: "ListWorkflowTemplates",
			Handler:    _WorkflowService_ListWorkflowTemplates_Handler,
		},
		{
			MethodName: "ArchiveWorkflowTemplate",
			Handler:    _WorkflowService_ArchiveWorkflowTemplate_Handler,
		},
		{
			MethodName: "GetArtifact",
			Handler:    _WorkflowService_GetArtifact_Handler,
		},
		{
			MethodName: "ListFiles",
			Handler:    _WorkflowService_ListFiles_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchWorkflowExecution",
			Handler:       _WorkflowService_WatchWorkflowExecution_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetWorkflowExecutionLogs",
			Handler:       _WorkflowService_GetWorkflowExecutionLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "workflow.proto",
}
