// Code generated by protoc-gen-go. DO NOT EDIT.
// source: workflow.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateWorkflowRequest struct {
	Namespace            string    `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Workflow             *Workflow `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateWorkflowRequest) Reset()         { *m = CreateWorkflowRequest{} }
func (m *CreateWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowRequest) ProtoMessage()    {}
func (*CreateWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{0}
}

func (m *CreateWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowRequest.Unmarshal(m, b)
}
func (m *CreateWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowRequest.Merge(m, src)
}
func (m *CreateWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowRequest.Size(m)
}
func (m *CreateWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowRequest proto.InternalMessageInfo

func (m *CreateWorkflowRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateWorkflowRequest) GetWorkflow() *Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

type Workflow struct {
	Uid                  string            `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Parameters           []*Parameter      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	WorkflowTemplate     *WorkflowTemplate `protobuf:"bytes,4,opt,name=workflowTemplate,proto3" json:"workflowTemplate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Workflow) Reset()         { *m = Workflow{} }
func (m *Workflow) String() string { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()    {}
func (*Workflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{1}
}

func (m *Workflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow.Unmarshal(m, b)
}
func (m *Workflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow.Marshal(b, m, deterministic)
}
func (m *Workflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow.Merge(m, src)
}
func (m *Workflow) XXX_Size() int {
	return xxx_messageInfo_Workflow.Size(m)
}
func (m *Workflow) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow proto.InternalMessageInfo

func (m *Workflow) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Workflow) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Workflow) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *Workflow) GetWorkflowTemplate() *WorkflowTemplate {
	if m != nil {
		return m.WorkflowTemplate
	}
	return nil
}

type Parameter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Parameter) Reset()         { *m = Parameter{} }
func (m *Parameter) String() string { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()    {}
func (*Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_892c7f566756b0be, []int{2}
}

func (m *Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameter.Unmarshal(m, b)
}
func (m *Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameter.Marshal(b, m, deterministic)
}
func (m *Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameter.Merge(m, src)
}
func (m *Parameter) XXX_Size() int {
	return xxx_messageInfo_Parameter.Size(m)
}
func (m *Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Parameter proto.InternalMessageInfo

func (m *Parameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Parameter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateWorkflowRequest)(nil), "api.CreateWorkflowRequest")
	proto.RegisterType((*Workflow)(nil), "api.Workflow")
	proto.RegisterType((*Parameter)(nil), "api.Parameter")
}

func init() { proto.RegisterFile("workflow.proto", fileDescriptor_892c7f566756b0be) }

var fileDescriptor_892c7f566756b0be = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x31, 0x6f, 0x13, 0x31,
	0x18, 0x86, 0xe5, 0x26, 0xa0, 0xe6, 0xab, 0x08, 0xd5, 0x07, 0x85, 0x28, 0x8a, 0x44, 0x64, 0x96,
	0x54, 0x42, 0xb1, 0x1a, 0xe8, 0x12, 0x84, 0x04, 0xaa, 0x04, 0x0b, 0x03, 0x3a, 0x10, 0x8c, 0xe0,
	0xb6, 0x1f, 0x95, 0x45, 0x72, 0x36, 0xb6, 0x93, 0x0e, 0x55, 0x17, 0x36, 0x66, 0x46, 0x46, 0xfe,
	0x04, 0xff, 0x83, 0xbf, 0xc0, 0xc4, 0xaf, 0x40, 0xe7, 0x9c, 0x4d, 0x4f, 0x77, 0xa2, 0xcd, 0xe6,
	0xf3, 0xf7, 0xde, 0xfb, 0x3e, 0x7e, 0xef, 0x0c, 0xdd, 0x53, 0x6d, 0x3f, 0x7d, 0x9c, 0xe9, 0xd3,
	0xb1, 0xb1, 0xda, 0x6b, 0x6c, 0x49, 0xa3, 0xfa, 0x83, 0x13, 0xad, 0x4f, 0x66, 0x24, 0xa4, 0x51,
	0x42, 0xe6, 0xb9, 0xf6, 0xd2, 0x2b, 0x9d, 0xbb, 0x95, 0xa4, 0x7f, 0x37, 0xbe, 0xf2, 0xde, 0xd3,
	0xdc, 0xcc, 0xa4, 0xa7, 0xd5, 0x80, 0x7f, 0x80, 0x9d, 0x03, 0x4b, 0xd2, 0xd3, 0xbb, 0x52, 0x90,
	0xd1, 0xe7, 0x05, 0x39, 0x8f, 0x03, 0xe8, 0xe4, 0x72, 0x4e, 0xce, 0xc8, 0x23, 0xea, 0xb1, 0x21,
	0x1b, 0x75, 0xb2, 0x7f, 0x1b, 0xb8, 0x0b, 0x9b, 0xd1, 0xb1, 0xb7, 0x31, 0x64, 0xa3, 0xad, 0xc9,
	0x8d, 0xb1, 0x34, 0x6a, 0x9c, 0x5c, 0xd2, 0x98, 0xff, 0x60, 0xb0, 0x19, 0xb7, 0x71, 0x1b, 0x5a,
	0x0b, 0x75, 0x5c, 0xfa, 0x15, 0x4b, 0x44, 0x68, 0x17, 0xb6, 0xc1, 0xa5, 0x93, 0x85, 0x35, 0x8e,
	0x01, 0x8c, 0xb4, 0x72, 0x4e, 0x9e, 0xac, 0xeb, 0xb5, 0x86, 0xad, 0xd1, 0xd6, 0xa4, 0x1b, 0xfc,
	0x5f, 0xc5, 0xed, 0xec, 0x82, 0x02, 0x9f, 0xc1, 0x76, 0x8c, 0x7b, 0x53, 0x1e, 0xaf, 0xd7, 0x0e,
	0x54, 0x3b, 0x15, 0xaa, 0x38, 0xcc, 0x6a, 0x72, 0xbe, 0x0f, 0x9d, 0xe4, 0x9d, 0x98, 0xd8, 0x05,
	0xa6, 0xdb, 0x70, 0x6d, 0x29, 0x67, 0x8b, 0x08, 0xba, 0x7a, 0x98, 0xfc, 0x69, 0xc3, 0xcd, 0xe8,
	0xfe, 0x9a, 0xec, 0x52, 0x1d, 0x11, 0x5a, 0xe8, 0x56, 0x2b, 0xc5, 0x7e, 0xa0, 0x68, 0xec, 0xb9,
	0x5f, 0xed, 0x8d, 0xef, 0x7f, 0xf9, 0xf5, 0xfb, 0xdb, 0x86, 0xe0, 0xf7, 0x8b, 0x0f, 0xe9, 0xc4,
	0x72, 0xef, 0x90, 0xbc, 0xdc, 0x13, 0x67, 0xa9, 0xfa, 0x73, 0x11, 0xd9, 0xdd, 0x34, 0x95, 0x8c,
	0xdf, 0x19, 0xdc, 0xa9, 0xfa, 0xc7, 0x93, 0x21, 0x6f, 0x08, 0x4f, 0x45, 0x94, 0x10, 0xcd, 0x35,
	0xf1, 0xe7, 0x01, 0xe6, 0x29, 0x7f, 0x70, 0x39, 0x4c, 0xfa, 0xaf, 0xdc, 0xb4, 0x56, 0x2e, 0x7e,
	0x65, 0x70, 0xeb, 0x05, 0xf9, 0x1a, 0xda, 0xbd, 0x10, 0xdb, 0x30, 0xb9, 0x84, 0x6b, 0x1a, 0xb8,
	0x1e, 0xe1, 0x64, 0x1d, 0x2e, 0x71, 0xb6, 0x50, 0xc7, 0xe7, 0xf8, 0x93, 0xc1, 0xe0, 0xa5, 0x72,
	0xb5, 0xc8, 0xb7, 0x64, 0x5d, 0x71, 0x61, 0x70, 0x14, 0x32, 0xff, 0x27, 0x89, 0x74, 0xbb, 0x57,
	0x50, 0x3a, 0xa3, 0x73, 0x47, 0xfc, 0x20, 0x10, 0x3f, 0xc1, 0xc7, 0xeb, 0x13, 0x8b, 0x65, 0x69,
	0x76, 0x78, 0x3d, 0x5c, 0xd9, 0x87, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x98, 0xff, 0x3b, 0x58,
	0x00, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkflowServiceClient is the client API for WorkflowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkflowServiceClient interface {
	// Creates a Workflow
	CreateWorkflow(ctx context.Context, in *CreateWorkflowRequest, opts ...grpc.CallOption) (*Workflow, error)
	CreateWorkflowTemplate(ctx context.Context, in *CreateWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error)
	GetWorkflowTemplate(ctx context.Context, in *GetWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error)
	ListWorkflowTemplateVersions(ctx context.Context, in *ListWorkflowTemplateVersionsRequest, opts ...grpc.CallOption) (*ListWorkflowTemplateVersionsResponse, error)
}

type workflowServiceClient struct {
	cc *grpc.ClientConn
}

func NewWorkflowServiceClient(cc *grpc.ClientConn) WorkflowServiceClient {
	return &workflowServiceClient{cc}
}

func (c *workflowServiceClient) CreateWorkflow(ctx context.Context, in *CreateWorkflowRequest, opts ...grpc.CallOption) (*Workflow, error) {
	out := new(Workflow)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/CreateWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) CreateWorkflowTemplate(ctx context.Context, in *CreateWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error) {
	out := new(WorkflowTemplate)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/CreateWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) GetWorkflowTemplate(ctx context.Context, in *GetWorkflowTemplateRequest, opts ...grpc.CallOption) (*WorkflowTemplate, error) {
	out := new(WorkflowTemplate)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/GetWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ListWorkflowTemplateVersions(ctx context.Context, in *ListWorkflowTemplateVersionsRequest, opts ...grpc.CallOption) (*ListWorkflowTemplateVersionsResponse, error) {
	out := new(ListWorkflowTemplateVersionsResponse)
	err := c.cc.Invoke(ctx, "/api.WorkflowService/ListWorkflowTemplateVersions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkflowServiceServer is the server API for WorkflowService service.
type WorkflowServiceServer interface {
	// Creates a Workflow
	CreateWorkflow(context.Context, *CreateWorkflowRequest) (*Workflow, error)
	CreateWorkflowTemplate(context.Context, *CreateWorkflowTemplateRequest) (*WorkflowTemplate, error)
	GetWorkflowTemplate(context.Context, *GetWorkflowTemplateRequest) (*WorkflowTemplate, error)
	ListWorkflowTemplateVersions(context.Context, *ListWorkflowTemplateVersionsRequest) (*ListWorkflowTemplateVersionsResponse, error)
}

// UnimplementedWorkflowServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkflowServiceServer struct {
}

func (*UnimplementedWorkflowServiceServer) CreateWorkflow(ctx context.Context, req *CreateWorkflowRequest) (*Workflow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) CreateWorkflowTemplate(ctx context.Context, req *CreateWorkflowTemplateRequest) (*WorkflowTemplate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkflowTemplate not implemented")
}
func (*UnimplementedWorkflowServiceServer) GetWorkflowTemplate(ctx context.Context, req *GetWorkflowTemplateRequest) (*WorkflowTemplate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowTemplate not implemented")
}
func (*UnimplementedWorkflowServiceServer) ListWorkflowTemplateVersions(ctx context.Context, req *ListWorkflowTemplateVersionsRequest) (*ListWorkflowTemplateVersionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWorkflowTemplateVersions not implemented")
}

func RegisterWorkflowServiceServer(s *grpc.Server, srv WorkflowServiceServer) {
	s.RegisterService(&_WorkflowService_serviceDesc, srv)
}

func _WorkflowService_CreateWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).CreateWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/CreateWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).CreateWorkflow(ctx, req.(*CreateWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_CreateWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).CreateWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/CreateWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).CreateWorkflowTemplate(ctx, req.(*CreateWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_GetWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkflowTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).GetWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/GetWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).GetWorkflowTemplate(ctx, req.(*GetWorkflowTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ListWorkflowTemplateVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkflowTemplateVersionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ListWorkflowTemplateVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.WorkflowService/ListWorkflowTemplateVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ListWorkflowTemplateVersions(ctx, req.(*ListWorkflowTemplateVersionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkflowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.WorkflowService",
	HandlerType: (*WorkflowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWorkflow",
			Handler:    _WorkflowService_CreateWorkflow_Handler,
		},
		{
			MethodName: "CreateWorkflowTemplate",
			Handler:    _WorkflowService_CreateWorkflowTemplate_Handler,
		},
		{
			MethodName: "GetWorkflowTemplate",
			Handler:    _WorkflowService_GetWorkflowTemplate_Handler,
		},
		{
			MethodName: "ListWorkflowTemplateVersions",
			Handler:    _WorkflowService_ListWorkflowTemplateVersions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "workflow.proto",
}
